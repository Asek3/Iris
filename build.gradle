plugins {
	id 'dev.architectury.loom' version '0.10.0-SNAPSHOT'
	id 'maven-publish'
}

loom {
    silentMojangMappingsLicense()
	
	forge {
		mixinConfigs = [
				"mixins.oculus.json",
				"mixins.oculus.fantastic.json",
				"mixins.oculus.vertexformat.json",
				"mixins.oculus.bettermipmaps.json",
				"mixins.oculus.fixes.maxfpscrash.json",
				"mixins.oculus.optimized-stitching.json",
				"oculus-batched-entity-rendering.mixins.json",
				"mixins.oculus.compat.sodium.json"
		]
	}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
}

configurations {
    toJar
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
		
	compileOnly files("libs/apache-ant-1.8.2.jar")
	compileOnly files("libs/rubidium-0.2.1-dev.jar")
	compileOnly files("libs/flywheel-1.16-0.2.5.jar")
	
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	toJar fileTree(include: ['antlr4-runtime-4.10.1.jar', 'glsl-transformer-1.0.0-pre21.2.jar'], dir: 'libs')
}

processResources {
	inputs.property "version", project.version

	filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	withSourcesJar()
}

jar {
	from { configurations.toJar.collect { it.isDirectory() ? it : zipTree(it) } }
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
	}
}
